{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "notarizerAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "newHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "eventType",
						"type": "uint8"
					}
				],
				"name": "HashEvent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "joinedValue",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "eventType",
						"type": "uint8"
					}
				],
				"name": "JoinEvent",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "source",
						"type": "bytes"
					}
				],
				"name": "bytesToBytes32",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "result",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_mmrRoot",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "_hashToCheck",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "_hashIndex",
						"type": "uint256"
					},
					{
						"internalType": "bytes32[]",
						"name": "_branch",
						"type": "bytes32[]"
					}
				],
				"name": "checkHashInRoot",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "testString",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "key",
						"type": "bytes"
					}
				],
				"name": "create64Hash",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "toHash",
						"type": "bytes"
					}
				],
				"name": "createHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "toHash",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "personalisation",
						"type": "bytes"
					},
					{
						"internalType": "bool",
						"name": "flipped",
						"type": "bool"
					}
				],
				"name": "createHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "toHash",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "personalisation",
						"type": "bytes"
					}
				],
				"name": "createHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_hashToCheck",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "_hashIndex",
						"type": "uint256"
					},
					{
						"internalType": "bytes32[]",
						"name": "_branch",
						"type": "bytes32[]"
					}
				],
				"name": "predictedRootHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_bytes32",
						"type": "bytes32"
					}
				],
				"name": "reverseBytes",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/MMR/VerusProof.sol": "VerusProof"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/contracts/MMR/BLAKE2b/BLAKE2b.sol": {
			"keccak256": "0x10a7b9c7e923faf2805fd987853138bd5bb17ac38e23fe3256cd49b368f5e59b",
			"license": "MIT",
			"urls": [
				"bzz-raw://f3ea0e6bda2d354bc288553cc5afc01bb8a961b98be7d2052b4f43e4aaf32373",
				"dweb:/ipfs/QmQX1pRDEjfVbxDi3u5qnmQqMp889p7E3v9UqydKYs2Jau"
			]
		},
		"localhost/contracts/MMR/BLAKE2b/BLAKE2b_Constants.sol": {
			"keccak256": "0x847cec1327082a2f6651a2ef2cf1eb4608aedef9a48452f952d633d3cd4125ad",
			"license": "MIT",
			"urls": [
				"bzz-raw://280bebb8fc2de921191d7e82e064816b7fa48a2adb0be175fdb6bf876d34abfc",
				"dweb:/ipfs/QmNbETDZqWNVz8r5UnBdqNXgE8esnVjGRb37vh51U86riw"
			]
		},
		"localhost/contracts/MMR/VerusProof.sol": {
			"keccak256": "0xa897ce38fee2c3276210f217901823369ddd983de9a35280d815cd0c93dc1e8f",
			"license": "MIT",
			"urls": [
				"bzz-raw://63e4a41f0e282ec3787f9c223235d83cd373d0b3fcb6c65ae89b13207565870e",
				"dweb:/ipfs/QmPJ2YMWb1HViSEFr5cfiLd7hmyXP5eoxf8J4gj449mhjZ"
			]
		},
		"localhost/contracts/VerusBridge/VerusObjects.sol": {
			"keccak256": "0x6e722a0bfc1190846bddab494b975def67df820957110167cef7bc9f58643999",
			"license": "MIT",
			"urls": [
				"bzz-raw://a02233a281ccad55798e68ba54493f6a195bdc2b3f260acca1293d6bd3d4f58c",
				"dweb:/ipfs/QmXfL5Mn3nsQHgHQKpEceSMVPz9FtBURifQwCrjZD9vJf6"
			]
		},
		"localhost/contracts/VerusBridge/VerusSerializer.sol": {
			"keccak256": "0xcc5e38c1bbc3ba8a6a664dd5e72e798404419fb090a54bcf015f3fc3c354a50d",
			"license": "MIT",
			"urls": [
				"bzz-raw://f086d6ccc1e0995f4d6dffef40cd52f6b7b3437ca6afe46a36b0a7b916cf81ea",
				"dweb:/ipfs/QmUX4iFb2im1HzsSTcN6kPju2kTbZ5yN8rSBnrVVoeeVcG"
			]
		},
		"localhost/contracts/VerusNotarizer/VerusNotarizer.sol": {
			"keccak256": "0x5d68e9204b9e16acd5c28a3e9e403c98874ca1b4629cac5ac34a08fc762d1bc7",
			"license": "MIT",
			"urls": [
				"bzz-raw://2fa5e07529848dea40654c04420dab27d146660d855c36ed70ea76a2322dac71",
				"dweb:/ipfs/Qmbwehaq18NfVztkFefcHsxjsnWvwjroXJPymriHvWnU8W"
			]
		}
	},
	"version": 1
}